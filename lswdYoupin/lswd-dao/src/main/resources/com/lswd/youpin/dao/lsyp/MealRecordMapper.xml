<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.lswd.youpin.dao.lsyp.MealRecordMapper">
    <resultMap id="BaseResultMap" type="com.lswd.youpin.model.lsyp.MealRecord">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        <id column="meal_record_id" jdbcType="INTEGER" property="mealRecordId"/>
        <result column="card_id" jdbcType="INTEGER" property="cardId"/>
        <result column="canteen_id" jdbcType="VARCHAR" property="canteenId"/>
        <result column="member_id" jdbcType="INTEGER" property="memberId"/>
        <result column="member_name" jdbcType="VARCHAR" property="memberName"/>
        <result column="hostname" jdbcType="VARCHAR" property="hostname"/>
        <result column="payment_amount" jdbcType="REAL" property="paymentAmount"/>
        <result column="balance" jdbcType="REAL" property="balance"/>
        <result column="payment_time" jdbcType="TIMESTAMP" property="paymentTime"/>
        <result column="consume_type" jdbcType="INTEGER" property="consumeType"/>
        <result column="card_type" jdbcType="INTEGER" property="cardType"/>
        <collection property="recipeNames" ofType="" column="meal_record_id" select="getConsumeRecipes"></collection>
    </resultMap>
    <select id="getConsumeRecipes" parameterType="java.lang.Integer" resultType="java.lang.String">
        select tr.recipe_name
        from dh_mealmenu dmm,t_recipe tr
        where dmm.meal_record_id=#{mealRecordId} and dmm.recipe_id=tr.id
    </select>
    <sql id="Base_Column_List">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        meal_record_id, card_id, canteen_id, member_id, member_name, hostname, payment_amount,
        balance, payment_time, consume_type, card_type
    </sql>
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        select
        <include refid="Base_Column_List"/>
        from dh_mealrecord
        where meal_record_id = #{mealRecordId,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        delete from dh_mealrecord
        where meal_record_id = #{mealRecordId,jdbcType=INTEGER}
    </delete>
    <insert id="insert" parameterType="com.lswd.youpin.model.lsyp.MealRecord">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        insert into dh_mealrecord (meal_record_id, card_id, canteen_id,
        member_id, member_name, hostname,
        payment_amount, balance, payment_time,
        consume_type, card_type)
        values (#{mealRecordId,jdbcType=INTEGER}, #{cardId,jdbcType=INTEGER}, #{canteenId,jdbcType=VARCHAR},
        #{memberId,jdbcType=INTEGER}, #{memberName,jdbcType=VARCHAR}, #{hostname,jdbcType=VARCHAR},
        #{paymentAmount,jdbcType=REAL}, #{balance,jdbcType=REAL}, #{paymentTime,jdbcType=TIMESTAMP},
        #{consumeType,jdbcType=INTEGER}, #{cardType,jdbcType=INTEGER})
    </insert>
    <insert id="insertSelective" parameterType="com.lswd.youpin.model.lsyp.MealRecord">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        insert into dh_mealrecord
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="mealRecordId != null">
                meal_record_id,
            </if>
            <if test="cardId != null">
                card_id,
            </if>
            <if test="canteenId != null">
                canteen_id,
            </if>
            <if test="memberId != null">
                member_id,
            </if>
            <if test="memberName != null">
                member_name,
            </if>
            <if test="hostname != null">
                hostname,
            </if>
            <if test="paymentAmount != null">
                payment_amount,
            </if>
            <if test="balance != null">
                balance,
            </if>
            <if test="paymentTime != null">
                payment_time,
            </if>
            <if test="consumeType != null">
                consume_type,
            </if>
            <if test="cardType != null">
                card_type,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="mealRecordId != null">
                #{mealRecordId,jdbcType=INTEGER},
            </if>
            <if test="cardId != null">
                #{cardId,jdbcType=INTEGER},
            </if>
            <if test="canteenId != null">
                #{canteenId,jdbcType=VARCHAR},
            </if>
            <if test="memberId != null">
                #{memberId,jdbcType=INTEGER},
            </if>
            <if test="memberName != null">
                #{memberName,jdbcType=VARCHAR},
            </if>
            <if test="hostname != null">
                #{hostname,jdbcType=VARCHAR},
            </if>
            <if test="paymentAmount != null">
                #{paymentAmount,jdbcType=REAL},
            </if>
            <if test="balance != null">
                #{balance,jdbcType=REAL},
            </if>
            <if test="paymentTime != null">
                #{paymentTime,jdbcType=TIMESTAMP},
            </if>
            <if test="consumeType != null">
                #{consumeType,jdbcType=INTEGER},
            </if>
            <if test="cardType != null">
                #{cardType,jdbcType=INTEGER},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.lswd.youpin.model.lsyp.MealRecord">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        update dh_mealrecord
        <set>
            <if test="cardId != null">
                card_id = #{cardId,jdbcType=INTEGER},
            </if>
            <if test="canteenId != null">
                canteen_id = #{canteenId,jdbcType=VARCHAR},
            </if>
            <if test="memberId != null">
                member_id = #{memberId,jdbcType=INTEGER},
            </if>
            <if test="memberName != null">
                member_name = #{memberName,jdbcType=VARCHAR},
            </if>
            <if test="hostname != null">
                hostname = #{hostname,jdbcType=VARCHAR},
            </if>
            <if test="paymentAmount != null">
                payment_amount = #{paymentAmount,jdbcType=REAL},
            </if>
            <if test="balance != null">
                balance = #{balance,jdbcType=REAL},
            </if>
            <if test="paymentTime != null">
                payment_time = #{paymentTime,jdbcType=TIMESTAMP},
            </if>
            <if test="consumeType != null">
                consume_type = #{consumeType,jdbcType=INTEGER},
            </if>
            <if test="cardType != null">
                card_type = #{cardType,jdbcType=INTEGER},
            </if>
        </set>
        where meal_record_id = #{mealRecordId,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.lswd.youpin.model.lsyp.MealRecord">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        update dh_mealrecord
        set card_id = #{cardId,jdbcType=INTEGER},
        canteen_id = #{canteenId,jdbcType=VARCHAR},
        member_id = #{memberId,jdbcType=INTEGER},
        member_name = #{memberName,jdbcType=VARCHAR},
        hostname = #{hostname,jdbcType=VARCHAR},
        payment_amount = #{paymentAmount,jdbcType=REAL},
        balance = #{balance,jdbcType=REAL},
        payment_time = #{paymentTime,jdbcType=TIMESTAMP},
        consume_type = #{consumeType,jdbcType=INTEGER},
        card_type = #{cardType,jdbcType=INTEGER}
        where meal_record_id = #{mealRecordId,jdbcType=INTEGER}
    </update>

    <select id="getMemberMealRecordListCount" resultType="java.lang.Integer">
        select count(1) from dh_mealrecord meal
        LEFT JOIN dh_members m ON m.id = meal.member_id
        LEFT JOIN getMemberNutritionOneTime one ON meal.meal_record_id = one.meal_record_id
        WHERE 1=1 AND m.is_delete = 0 AND DATE_FORMAT(meal.payment_time,'%Y-%m-%d') BETWEEN #{startDate} AND #{endDate}
        <if test="keyword != ''">
            AND (m.member_name LIKE concat('%',#{keyword},'%'))
        </if>
        <if test="canteenId != ''">
            AND m.canteen_id = #{canteenId}
        </if>
        <!-- <if test="canteenId == ''">
             AND
             <foreach collection="canteenIds" item="canteenId" open="(" close=")" separator="OR">
                 m.canteen_id = #{canteenId}
             </foreach>
         </if>-->
    </select>

    <resultMap id="getMemberMealRecordListMap" type="com.lswd.youpin.model.lsyp.MealRecord">
        <id column="meal_record_id" jdbcType="INTEGER" property="mealRecordId"/>
        <result column="card_id" jdbcType="INTEGER" property="cardId"/>
        <result column="canteen_id" jdbcType="VARCHAR" property="canteenId"/>
        <result column="member_id" jdbcType="VARCHAR" property="memberId"/>
        <result column="member_name" jdbcType="VARCHAR" property="memberName"/>
        <result column="payment_amount" jdbcType="REAL" property="paymentAmount"/>
        <result column="balance" jdbcType="REAL" property="balance"/>
        <result column="payDate" jdbcType="VARCHAR" property="payDate"/>
        <result column="payment_time" jdbcType="TIMESTAMP" property="paymentTime"/>
        <result column="paymentTimeStr" jdbcType="VARCHAR" property="paymentTimeStr"/>
        <association property="members" javaType="com.lswd.youpin.model.lsyp.Members">
            <id column="me_id" jdbcType="INTEGER" property="id"/>
            <result column="me_member_id" jdbcType="VARCHAR" property="memberId"/>
            <result column="me_member_name" jdbcType="VARCHAR" property="memberName"/>
            <result column="me_telephone" jdbcType="VARCHAR" property="telephone"/>
            <result column="me_cardUid" jdbcType="VARCHAR" property="cardUid"/>
        </association>
        <association property="nutritionVo" javaType="com.lswd.youpin.model.vo.NutritionVo">
            <id column="v_meal_record_id" jdbcType="INTEGER" property="mealRecordId"/>
            <result column="calorie" jdbcType="REAL" property="calorie"/>
            <result column="protein" jdbcType="REAL" property="protein"/>
            <result column="fat" jdbcType="REAL" property="fat"/>
            <result column="carbonhydrate" jdbcType="REAL" property="carbonhydrate"/>
            <result column="vc" jdbcType="REAL" property="vc"/>
        </association>
        <!--<collection property="mealMenus" ofType="com.lswd.youpin.model.lsyp.MealMenu" select="getMenusByRecordId"-->
        <!--column="meal_record_id"/>-->
    </resultMap>

    <select id="getMemberMealRecordList" resultMap="getMemberMealRecordListMap">
        select meal.*,m.id AS me_id,m.member_id AS me_member_id, m.member_name AS me_member_name,m.telephone AS
        me_telephone,one.meal_record_id AS v_meal_record_id,one.calorie AS
        calorie,one.protein as protein,one.fat as fat,one.carbonhydrate AS carbonhydrate,one.vc as vc
        from dh_mealrecord meal
        LEFT JOIN dh_members m ON m.id = meal.member_id
        LEFT JOIN getMemberNutritionOneTime one ON meal.meal_record_id = one.meal_record_id
        WHERE 1=1 AND m.is_delete = 0 AND DATE_FORMAT(meal.payment_time,'%Y-%m-%d') BETWEEN #{startDate} AND #{endDate}
        <if test="keyword != ''">
            AND (m.member_name LIKE concat('%',#{keyword},'%'))
        </if>
        <if test="canteenId != ''">
            AND m.canteen_id = #{canteenId}
        </if>
        <!-- <if test="canteenId == ''">
             AND
             <foreach collection="canteenIds" item="canteenId" open="(" close=")" separator="OR">
                 m.canteen_id = #{canteenId}
             </foreach>
         </if>-->
        ORDER BY meal.payment_time DESC
        limit #{offSet},#{pageSize}
    </select>

    <select id="getMenusByRecordId" parameterType="java.lang.Integer" resultType="com.lswd.youpin.model.lsyp.MealMenu">
        select menu.meal_menu_id AS mealMenuId , menu.meal_record_id AS mealRecordId,r.recipe_id AS recipeIdBH,menu.recipe_id AS recipeId
        from dh_mealmenu menu INNER JOIN t_recipe r ON menu.recipe_id = r.id
        where meal_record_id = #{mealRecordId,jdbcType=INTEGER}
    </select>


    <select id="getRecipeMealRecordListCount" resultType="java.lang.Integer">
        SELECT count(1) FROM t_recipe r
        WHERE 1=1 AND r.is_delete = 0
        <if test="keyword != ''">
            AND (r.recipe_id LIKE concat('%',#{keyword},'%') OR r.recipe_name LIKE concat('%',#{keyword},'%'))
        </if>
        <if test="categoryId != null">
            AND r.category_id = #{categoryId}
        </if>
        <if test="canteenId != ''">
            AND r.canteen_id = #{canteenId}
        </if>
        <if test="canteenId == ''">
            AND
            <foreach collection="canteenIds" item="canteenId" open="(" close=")" separator="OR">
                r.canteen_id = #{canteenId}
            </foreach>
        </if>
    </select>

    <resultMap id="getRecipeMealRecordListMap" type="com.lswd.youpin.model.lsyp.Recipe">
        <id column="id" jdbcType="INTEGER" property="id"/>
        <result column="recipe_name" jdbcType="VARCHAR" property="recipeName"/>
        <result column="recipe_id" jdbcType="VARCHAR" property="recipeId"/>
        <result column="canteen_id" jdbcType="VARCHAR" property="canteenId"/>
        <result column="cook_type" jdbcType="SMALLINT" property="cookType"/>
        <result column="guide_price" jdbcType="REAL" property="guidePrice"/>
        <result column="market_price" jdbcType="REAL" property="marketPrice"/>
        <result column="category_id" jdbcType="INTEGER" property="categoryId"/>
        <result column="categoryName" jdbcType="VARCHAR" property="categoryName"/>
        <result column="cook_detail" jdbcType="VARCHAR" property="cookDetail"/>
        <result column="is_delete" jdbcType="BIT" property="isDelete"/>
        <result column="saleTotal" jdbcType="INTEGER" property="saleTotal"/>
        <result column="saleTotalMoney" jdbcType="REAL" property="saleTotalMoney"/>
    </resultMap>

    <select id="getRecipeMealRecordList" resultMap="getRecipeMealRecordListMap">
        SELECT r.recipe_id,r.recipe_name,r.guide_price,r.market_price,r.category_id,total.saleTotal,total.saleTotalMoney
        FROM t_recipe r
        LEFT JOIN (select COUNT(1) AS saleTotal,menu.recipe_id,SUM(r.guide_price) AS saleTotalMoney
        from dh_mealrecord meal
        INNER JOIN dh_mealmenu menu ON meal.meal_record_id = menu.meal_record_id
        INNER JOIN t_recipe r on menu.recipe_id = r.id
        WHERE DATE_FORMAT(meal.payment_time,'%Y-%m-%d') BETWEEN #{startDate} AND #{endDate}
        GROUP BY menu.recipe_id) total ON total.recipe_id = r.id
        WHERE 1=1 AND r.is_delete = 0
        <if test="keyword != ''">
            AND (r.recipe_id LIKE concat('%',#{keyword},'%') OR r.recipe_name LIKE concat('%',#{keyword},'%'))
        </if>
        <if test="categoryId != null">
            AND r.category_id = #{categoryId}
        </if>
        <if test="canteenId != ''">
            AND r.canteen_id = #{canteenId}
        </if>
        <if test="canteenId == ''">
            AND
            <foreach collection="canteenIds" item="canteenId" open="(" close=")" separator="OR">
                r.canteen_id = #{canteenId}
            </foreach>
        </if>
        GROUP BY r.recipe_id
        limit #{offSet},#{pageSize}
    </select>

    <select id="getRecipeSaleSpeed" resultMap="getRecipeMealRecordListMap">
        SELECT r.recipe_id,r.recipe_name,r.guide_price,r.market_price,r.category_id,total.saleTotal,total.saleTotalMoney
        FROM t_recipe r
        LEFT JOIN (select COUNT(1) AS saleTotal,menu.recipe_id,SUM(r.guide_price) AS saleTotalMoney
        from dh_mealrecord meal
        INNER JOIN dh_mealmenu menu ON meal.meal_record_id = menu.meal_record_id
        INNER JOIN t_recipe r on menu.recipe_id = r.id
        WHERE (DATE_FORMAT(meal.payment_time,'%Y-%m-%d') BETWEEN #{startDate} AND #{endDate})
        AND (DATE_FORMAT(meal.payment_time,'%H:%i') BETWEEN #{startTime} and #{endTime})
        GROUP BY menu.recipe_id) total ON total.recipe_id = r.id
        WHERE 1=1 AND r.is_delete = 0
        <if test="canteenId != ''">
            AND r.canteen_id = #{canteenId}
        </if>
        GROUP BY r.recipe_id
        ORDER BY total.saleTotal DESC
        limit 0,15
    </select>


    <resultMap id="exportJSTSalesMap" type="com.lswd.youpin.model.lsyp.MealRecord">
        <id column="meal_record_id" jdbcType="INTEGER" property="mealRecordId"/>
        <result column="card_id" jdbcType="INTEGER" property="cardId"/>
        <result column="canteen_id" jdbcType="VARCHAR" property="canteenId"/>
        <result column="member_id" jdbcType="INTEGER" property="memberId"/>
        <result column="member_name" jdbcType="VARCHAR" property="memberName"/>
        <result column="hostname" jdbcType="VARCHAR" property="hostname"/>
        <result column="paymentTimeStr" jdbcType="VARCHAR" property="paymentTimeStr"/>
        <result column="jstName" jdbcType="VARCHAR" property="jstName"/>
        <result column="payment_amount" jdbcType="REAL" property="paymentAmount"/>
        <result column="balance" jdbcType="REAL" property="balance"/>
        <result column="payment_time" jdbcType="TIMESTAMP" property="paymentTime"/>
        <result column="consume_type" jdbcType="INTEGER" property="consumeType"/>
        <result column="card_type" jdbcType="INTEGER" property="cardType"/>
    </resultMap>

    <select id="exportJSTSales" resultMap="exportJSTSalesMap">
        select meal.*,plat.js_platform_name AS jstName,meal.payment_time AS paymentTimeStr
        from dh_mealrecord meal
        LEFT JOIN dh_js_platform plat ON meal.consume_type = plat.id
        WHERE 1=1 AND DATE_FORMAT(meal.payment_time,'%Y-%m-%d') BETWEEN #{startTime} AND #{endTime}
        <if test="canteenId != ''">
            AND meal.canteen_id = #{canteenId}
        </if>
        <if test="deviceId != null">
            and meal.consume_type=#{deviceId}
        </if>
        ORDER BY meal.payment_time DESC
    </select>


    <!--<select id="getMealRecords" resultType="com.lswd.youpin.model.vo.MealRecordVO">
        select count(left(dmr.payment_time,10)) as totalNum ,sum(dmr.payment_amount)as
        totalAmount,dmc.carduid,dmr.member_id as memberId,dmr.member_name as memberName,left(dmr.payment_time,10) as eatTime,
        concat(dmr.member_id,left(dmr.payment_time,10)) as fff
        from dh_member_card dmc,dh_mealrecord dmr
        where dmc.cardid=dmr.card_id and dmr.canteen_id=#{canteenId}
        and (dmr.payment_time BETWEEN #{startTime} and #{endTime})
        <if test="memberName != '' and memberName!=null">
            and dmr.member_name like concat('%',#{memberName},'%')
        </if>
        group by fff
        order by dmr.payment_time desc
        limit #{offSet},#{pageSize}
    </select>-->
    <select id="getMealRecords" resultType="com.lswd.youpin.model.vo.MealRecordVO">
        select count(left(dmr.payment_time,10)) as totalNum ,sum(dmr.payment_amount)as
        totalAmount,dm.cardid,dmr.member_id as memberId,dmr.member_name as memberName,left(dmr.payment_time,10) as
        eatTime,
        concat(dmr.member_id,left(dmr.payment_time,10)) as fff
        from dh_members dm,dh_mealrecord dmr
        where dm.id=dmr.member_id
        <if test="canteenId !='' and canteenId!=null">
            and dmr.canteen_id=#{canteenId}
        </if>
        and (dmr.payment_time BETWEEN #{startTime} and #{endTime})
        <if test="leaveId != 0 and leaveId!=null">
            and dmr.card_type =#{leaveId}
        </if>
        <if test="memberName != '' and memberName!=null">
            and dmr.member_name like concat('%',#{memberName},'%')
        </if>
        group by fff
        order by dmr.payment_time desc
        limit #{offSet},#{pageSize}
    </select>
    <select id="getTotalMembers" resultType="java.lang.Integer">
        select count(distinct member_id)
        from dh_mealrecord
        where 1=1
        <if test="canteenId !='' and canteenId!=null">
            and canteen_id=#{canteenId}
        </if>
        <if test="leaveId != 0 and leaveId!=null">
            and card_type =#{leaveId}
        </if>
        and (payment_time BETWEEN #{startTime} and #{endTime})
    </select>
    <select id="getTotalCount" resultType="java.lang.String">
        select concat(left(dmr.payment_time,10),dmr.member_id) as aaa
        from dh_members dm,dh_mealrecord dmr
        where dm.id=dmr.member_id
        <if test="canteenId !='' and canteenId!=null">
            and dmr.canteen_id=#{canteenId}
        </if>
        <if test="leaveId != 0 and leaveId!=null">
            and dmr.card_type =#{leaveId}
        </if>
        and (dmr.payment_time BETWEEN #{startTime} and #{endTime})
        <if test="memberName != '' and memberName!=null">
            and dmr.member_name= #{memberName}
        </if>
        group by aaa
    </select>
    <select id="getSalesBy" resultType="com.lswd.youpin.model.vo.MealStatisticVO">
        select t.pay_time as payTime,IFNULL (bs.amount,0) as breakfastAmount,IFNULL(ls.amount,0) as
        lunchAmount,IFNULL(ss.amount,0) as supperAmount,
        IFNULL(bs.amount,0)+IFNULL(ls.amount,0)+IFNULL(ss.amount,0) as totalAmount
        from
        ( select m.* from (select pay_time,canteen_id,consume_type
        from breakfast_statistics
        union select pay_time,canteen_id,consume_type from lunch_statistics
        union select pay_time,canteen_id ,consume_type from super_statistics
        )m where 1=1
        <if test="deviceId !=0 and deviceId!=null">
            and m.consume_type=#{deviceId}
        </if>
        )t
        left join breakfast_statistics bs
        on bs.pay_time=t.pay_time
        left join lunch_statistics ls
        on ls.pay_time=t.pay_time
        left join super_statistics ss
        on ss.pay_time=t.pay_time
        where 1=1
        <if test="canteenId !='' and canteenId!=null">
            and t.canteen_id=#{canteenId}
        </if>
        <!--<if test="leaveId != 0 and leaveId!=null">
            and t.card_type =#{leaveId}
        </if>-->
        and t.pay_time between #{startTime} and #{endTime}
        order by t.pay_time desc
        limit #{offSet},#{pageSize}
    </select>
    <select id="getSalesAll" resultType="com.lswd.youpin.model.vo.MealStatisticVO">
        select t.pay_time as payTime,IFNULL (bs.amount,0) as breakfastAmount,IFNULL(ls.amount,0) as
        lunchAmount,IFNULL(ss.amount,0) as supperAmount,
        IFNULL(bs.amount,0)+IFNULL(ls.amount,0)+IFNULL(ss.amount,0) as totalAmount
        from
        (select pay_time,canteen_id
        from breakfast_statistics
        union select pay_time,canteen_id from lunch_statistics
        union select pay_time,canteen_id from super_statistics)t
        left join breakfast_statistics bs
        on bs.pay_time=t.pay_time
        left join lunch_statistics ls
        on ls.pay_time=t.pay_time
        left join super_statistics ss
        on ss.pay_time=t.pay_time
        where 1=1
        <if test="canteenId !='' and canteenId!=null">
            and t.canteen_id=#{canteenId}
        </if>
        and t.pay_time between #{startTime} and #{endTime}
        order by t.pay_time desc
        limit #{offSet},#{pageSize}
    </select>
    <select id="getSalesCountBy" resultType="java.lang.Integer">
        select count(*)
        from
        (select m.* from (select pay_time,canteen_id,consume_type
        from breakfast_statistics
        union select pay_time,canteen_id,consume_type from lunch_statistics
        union select pay_time,canteen_id,consume_type from super_statistics)m
        where 1=1
        <if test="deviceId !=0 and deviceId!=null">
            and m.consume_type=#{deviceId}
        </if>
        )t
        where 1=1
        <if test="canteenId !='' and canteenId!=null">
            and t.canteen_id=#{canteenId}
        </if>

        <!--<if test="leaveId != 0 and leaveId!=null">
            and t.card_type =#{leaveId}
        </if>-->
        and t.pay_time between #{startTime} and #{endTime}
    </select>
    <select id="getSalesAmountBy" resultType="java.lang.Float">
        select sum(payment_amount) as amount
        from dh_mealrecord
        where 1=1
        <if test="canteenId !='' and canteenId!=null">
            and canteen_id=#{canteenId}
        </if>
        <if test="deviceId !=0 and deviceId!=null">
            and consume_type=#{deviceId}
        </if>
        <!--<if test="leaveId != 0 and leaveId!=null">
            and card_type =#{leaveId}
        </if>-->
        and payment_time between #{startTime} and #{endTime}
    </select>
    <select id="getSalesAllCount" resultType="java.lang.Integer">
        select count(*)
        from
        (select pay_time,canteen_id
        from breakfast_statistics
        union select pay_time,canteen_id from lunch_statistics
        union select pay_time,canteen_id from super_statistics)t
        where 1=1
        <if test="canteenId !='' and canteenId!=null">
            and t.canteen_id=#{canteenId}
        </if>
        and t.pay_time between #{startTime} and #{endTime}
    </select>
    <select id="getSalesAllAmount" resultType="java.lang.Float">
        select sum(payment_amount) as amount
        from dh_mealrecord
        where 1=1
        <if test="canteenId !='' and canteenId!=null">
            and canteen_id=#{canteenId}
        </if>
        and payment_time between #{startTime} and #{endTime}
    </select>
    <select id="getPersonMealRecords" resultMap="BaseResultMap">
        select *
        from dh_mealrecord
        where 1=1
        <if test="canteenId !='' and canteenId!=null">
            and canteen_id=#{canteenId}
        </if>
        and member_id=#{memberId}
        and payment_time between #{startTime} and #{endTime}
    </select>


    <select id="getMemberNutrition" resultMap="getMemberMealRecordListMap">
        select meal.*,DATE_FORMAT(meal.payment_time,'%Y-%m-%d') as payDate ,m.id AS me_id,m.member_id AS me_member_id,
        m.member_name AS me_member_name,m.telephone AS
        me_telephone,one.meal_record_id AS v_meal_record_id,one.calorie AS calorie,one.protein as protein,one.fat as
        fat,one.carbonhydrate AS carbonhydrate,one.vc as vc
        from dh_mealrecord meal
        LEFT JOIN dh_members m ON m.id = meal.member_id
        LEFT JOIN getMemberNutritionOneTime one ON meal.meal_record_id = one.meal_record_id
        WHERE 1=1 AND m.is_delete = 0 AND DATE_FORMAT(meal.payment_time,'%Y-%m-%d') BETWEEN #{startDate} AND #{endDate}
        <if test="canteenId != ''">
            AND m.canteen_id = #{canteenId}
        </if>
        <if test="memberId != null">
            AND m.id = #{memberId}
        </if>
        order BY meal.payment_time ASC
    </select>


</mapper>