<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.lswd.youpin.dao.lsyp.MaterialMapper">
    <resultMap id="BaseResultMap" type="com.lswd.youpin.model.lsyp.Material">
        <id column="id" jdbcType="INTEGER" property="id" />
        <result column="material_id" jdbcType="VARCHAR" property="materialId" />
        <result column="material_name" jdbcType="VARCHAR" property="materialName" />
        <result column="region" jdbcType="VARCHAR" property="region" />
        <result column="specification" jdbcType="VARCHAR" property="specification" />
        <result column="price" jdbcType="REAL" property="price" />
        <result column="price_all" jdbcType="REAL" property="priceAll" />
        <result column="number" jdbcType="INTEGER" property="number" />
        <result column="stock" jdbcType="INTEGER" property="stock" />
        <result column="category_id" jdbcType="INTEGER" property="categoryId" />
        <result column="canteenId" jdbcType="VARCHAR" property="canteenId" />
        <result column="level" jdbcType="BIT" property="level" />
        <result column="season" jdbcType="BIT" property="season" />
        <result column="update_user" jdbcType="VARCHAR" property="updateUser" />
        <result column="is_delete" jdbcType="BIT" property="isDelete" />
        <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
        <association property="supplier" column="sid" javaType="com.lswd.youpin.model.lsyp.Supplier">
            <id column="sid" jdbcType="INTEGER" property="id" />
            <result column="supplier_name" jdbcType="VARCHAR" property="name" />
            <result column="supplier_id" jdbcType="VARCHAR" property="supplierId" />
        </association>
        <association property="unit" column="uid" javaType="com.lswd.youpin.model.lsyp.Unit">
            <id column="uid" jdbcType="INTEGER" property="id" />
            <result column="unit_name" jdbcType="VARCHAR" property="unit" />
        </association>
    </resultMap>


    <resultMap id="BaseTypeResultMap" type="com.lswd.youpin.model.lsyp.MaterialCategory">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        <id column="id" jdbcType="INTEGER" property="id" />
        <result column="name" jdbcType="VARCHAR" property="name" />
        <result column="level" jdbcType="BIT" property="level" />
        <result column="parent_id" jdbcType="INTEGER" property="parentId" />
        <result column="update_user" jdbcType="VARCHAR" property="updateUser" />
        <result column="create_user" jdbcType="VARCHAR" property="createUser" />
        <result column="description" jdbcType="VARCHAR" property="description" />
        <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    </resultMap>

    <select id="categoryAll"  resultMap="BaseTypeResultMap">
        select id,`name` from t_material_category WHERE canteen_id = #{canteenId}
    </select>

    <resultMap id="UnitsMap" type="com.lswd.youpin.model.lsyp.Unit">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        <id column="id" jdbcType="INTEGER" property="id" />
        <result column="units" jdbcType="VARCHAR" property="unit" />
    </resultMap>


    <select id="getLastId" resultType="java.lang.Integer">
        select MAX(id)  from t_material_tenant
    </select>

    <insert id="insertMaterial" parameterType="com.lswd.youpin.model.lsyp.Material">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        insert into t_material_tenant( material_id, material_name, category_id,update_user,update_time,create_time,canteenId,price,price_all,number,units
        ,specification
        )
        values ( #{materialId,jdbcType=VARCHAR}, #{materialName,jdbcType=VARCHAR}, #{categoryId,jdbcType=INTEGER}
        ,#{updateUser,jdbcType=VARCHAR},#{updateTime,jdbcType=TIMESTAMP} ,#{createTime,jdbcType=TIMESTAMP},
        #{canteenId,jdbcType=VARCHAR},#{price,jdbcType=REAL},#{priceAll,jdbcType=REAL},#{number,jdbcType=INTEGER},#{unit.id,jdbcType=INTEGER}
        ,#{specification})
    </insert>

    <insert id="insertMaterialSupplier">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        insert into t_material_supplier(supplier_id,material_id,price)
        values ( #{supplierId,jdbcType=VARCHAR}, #{materialId,jdbcType=VARCHAR}, #{price,jdbcType=REAL})
    </insert>

    <update id="deleteById" parameterType="com.lswd.youpin.model.lsyp.Material">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        update t_material_tenant
        set
        is_delete = #{isDelete,jdbcType=BIT},
        update_time = #{updateTime,jdbcType=TIMESTAMP},
        update_user=#{updateUser,jdbcType=VARCHAR}
        where id = #{id,jdbcType=INTEGER}
    </update>

    <update id="updateById" parameterType="com.lswd.youpin.model.lsyp.Material">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        update t_material_tenant
        set material_name=#{materialName,jdbcType=VARCHAR},
        category_id=#{categoryId,jdbcType=INTEGER},
        canteenId=#{canteenId,jdbcType=VARCHAR},
        price=#{price,jdbcType=REAL},
        price_all=#{priceAll,jdbcType=REAL},
        number=#{number,jdbcType=INTEGER},
        units=#{unit.id,jdbcType=INTEGER},
        specification=#{specification,jdbcType=VARCHAR},
        update_time=#{updateTime,jdbcType=TIMESTAMP},
        update_user=#{updateUser,jdbcType=VARCHAR}
        where material_id= #{materialId,jdbcType=VARCHAR}
    </update>

    <update id="updateMaterialSupplier">
        <!--
        WARNING - @mbg.generated
        This element is automatically generated by MyBatis Generator, do not modify.
        -->
        update t_material_supplier
        set
        supplier_id=#{supplierId,jdbcType=VARCHAR},
        price=#{price,jdbcType=REAL}
        where material_id = #{materialId,jdbcType=VARCHAR}
    </update>

    <select id="getMaterialCount" parameterType="java.lang.String" resultType="java.lang.Integer">
        select
        COUNT(co.id)
        from ( SELECT  m.id as id from t_material_tenant as m LEFT JOIN t_material_supplier
        as ms on ms.material_id=m.material_id LEFT JOIN t_supplier as s on s.supplier_id=ms.supplier_id  where m.is_delete=0 AND
        <foreach collection="canteenIds" item="can" separator="OR" open="(" close=")">
            m.canteenId=#{can,jdbcType=VARCHAR}
        </foreach>
        <if test="categoryId!=0">
            AND  m.category_id =#{categoryId}
        </if>
        <if test="supplierId!=''">
            AND  ms.supplier_id =#{supplierId,jdbcType=VARCHAR}
        </if>
        <if test="keyword!=''">
            and  (m.material_name LIKE #{keyword,jdbcType=VARCHAR} or m.specification LIKE  #{keyword,jdbcType=VARCHAR})
        </if>
        GROUP BY m.id
        ) as co
    </select>

    <select id="selectMaterials"  resultMap="BaseResultMap">
        SELECT  m.id as id,m.material_id as material_id,m.material_name as material_name,m.canteenId as canteenId,
        m.category_id as category_id,m.price as price, m.price_all as price_all,m.number as number,
        m.specification as specification,m.create_time as create_time,s.id as sid,s.supplier_id as supplier_id,s.`name` as supplier_name,
        u.id as uid, u.units as unit_name from t_material_tenant as m LEFT JOIN t_material_supplier as ms on ms.material_id=m.material_id
        LEFT JOIN t_supplier as s on s.supplier_id=ms.supplier_id LEFT JOIN t_units as u ON u.id=m.units
        where m.is_delete=0 AND
        <foreach collection="canteenIds" item="can" separator="OR" open="(" close=")">
            m.canteenId=#{can,jdbcType=VARCHAR}
        </foreach>
        <if test="categoryId!=0">
            AND  m.category_id =#{categoryId}
        </if>
        <if test="supplierId!=''">
            AND  ms.supplier_id =#{supplierId,jdbcType=VARCHAR}
        </if>
        <if test="keyword!=''">
            and  m.material_name LIKE #{keyword,jdbcType=VARCHAR} or m.specification LIKE  #{keyword,jdbcType=VARCHAR}
        </if>
        GROUP BY m.id limit #{offSet},#{pageSize}
    </select>

    <select id="selectById"  resultMap="BaseResultMap">
        SELECT  m.id as id,m.material_id as material_id, m.material_name as material_name,
        m.specification as specification,ms.price as price,m.price_all as price_all,m.number as number,
        s.id as sid,s.supplier_id as supplier_id,s.`name` as supplier_name,u.id as uid,
        u.units as unit_name, m.canteenId as canteenId,m.category_id as category_id,m.create_time as create_time from
        t_material_tenant as m LEFT JOIN t_material_supplier as ms on ms.material_id=m.material_id
        LEFT JOIN t_supplier as s on s.supplier_id=ms.supplier_id LEFT JOIN t_units as u ON u.id=m.units
        where m.id = #{id,jdbcType=INTEGER} and m.is_delete=0
    </select>

    <select id="getCategoryCount"  resultType="java.lang.Integer">
        select COUNT(id) from t_material_category
        WHERE canteen_id=#{canteenId,jdbcType=VARCHAR}
        <if test="keyword!=''">
            AND name LIKE #{keyword,jdbcType=VARCHAR}
        </if>
    </select>

    <select id="selectCategoryList"  resultType="com.lswd.youpin.model.lsyp.MaterialCategory">
        select id,name,parent_id as parentId,canteen_id as canteenId,create_user as createUser,
        create_time as createTime,update_user as updateUser,update_time as updateTime,
        description as description from t_material_category WHERE canteen_id=#{canteenId,jdbcType=VARCHAR}
        <if test="keyword!=''">
            AND name LIKE #{keyword,jdbcType=VARCHAR}
        </if>
        limit #{offset},#{pageSize}
    </select>

    <select id="getUnits" resultType="com.lswd.youpin.model.lsyp.Unit">
        select id ,units as unit from t_units
    </select>

    <insert id="addCategory" parameterType="com.lswd.youpin.model.lsyp.MaterialCategory">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        insert into t_material_category(name,canteen_id,level,parent_id,create_user,create_time,update_user,update_time,description)
        values ( #{name,jdbcType=VARCHAR}, #{canteenId,jdbcType=VARCHAR}, #{level,jdbcType=BIT},#{parentId,jdbcType=INTEGER},
        #{createUser,jdbcType=VARCHAR},#{createTime,jdbcType=TIMESTAMP},#{updateUser,jdbcType=VARCHAR},#{updateTime,jdbcType=TIMESTAMP},
        #{description,jdbcType=VARCHAR})
    </insert>


    <select id="getMaterialCategoryByName"  parameterType="java.lang.String" resultMap="BaseTypeResultMap">
        select
        id,`name`,`level`,parent_id,update_user,create_user,description,update_time,create_time
        from t_material_category
        WHERE `name` = #{name}
    </select>
    <select id="getUnitByName" resultMap="UnitsMap" parameterType="java.lang.String">
        select * from t_units WHERE units = #{name}
    </select>

    <select id="selectCategoryByName"   resultType="com.lswd.youpin.model.lsyp.MaterialCategory">
        select id,name,parent_id as parentId,canteen_id as canteenId,create_user as createUser,
        create_time as createTime,update_user as updateUser,update_time as updateTime,
        description as description from t_material_category WHERE `name` = #{name} AND canteen_id=#{canteenId,jdbcType=VARCHAR}
    </select>

    <delete id="delCategoryById">
        delete FROM t_material_category WHERE  id=#{id,jdbcType=INTEGER}
    </delete>

    <delete id="deleteMaterialByCategoryId">
        DELETE FROM t_material_tenant WHERE category_id=#{CategoryId,jdbcType=VARCHAR}
    </delete>



</mapper>