<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:context="http://www.springframework.org/schema/context" xmlns:p="http://www.springframework.org/schema/p"
       xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
    http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd
    http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
    http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-4.0.xsd">

    <!--
        Spring整合Quartz进行配置遵循下面的步骤：
        1：定义工作任务的Job
        2：定义触发器Trigger，并将触发器与工作任务绑定
        3：定义调度器，并将Trigger注册到Scheduler
     -->
    <!--定义任务的bean ，这里使用MethodInvokingJobDetailFactoryBean-->
    <!--<bean id="testQuartz" class="com.lswd.youpin.quartz.OrderQuartz"></bean>-->
    <bean id="diskQuartz" class="com.lswd.youpin.quartz.DiskRecipeQuartz"></bean>
    <bean id="personInfoQuartz" class="com.lswd.youpin.quartz.PersonInfoQuartz"></bean>

    <!-- 将需要执行的定时任务注入JOB中。 -->
   <!-- <bean id="testJob" class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
        <property name="targetObject" ref="testQuartz"></property>
        &lt;!&ndash; 任务类中需要执行的方法 &ndash;&gt;
        <property name="targetMethod" value="doSomething"></property>
        &lt;!&ndash; 上一次未执行完成的，要等待有再执行。 &ndash;&gt;
        <property name="concurrent" value="false"></property>
    </bean>-->

    <bean id="diskJob" class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
        <property name="targetObject" ref="diskQuartz"></property>
        <!-- 任务类中需要执行的方法 -->
        <property name="targetMethod" value="update"></property>
        <!-- 上一次未执行完成的，要等待有再执行。 -->
        <property name="concurrent" value="false"></property>
    </bean>

    <bean id="personInfoJob" class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
        <property name="targetObject" ref="personInfoQuartz"></property>
        <!-- 任务类中需要执行的方法 -->
        <property name="targetMethod" value="synPersonInfo"></property>
        <!-- 上一次未执行完成的，要等待有再执行。 -->
        <property name="concurrent" value="false"></property>
    </bean>

    <!--
        关于cronExpression表达式，这里讲解一下：
            字段 允许值 允许的特殊字符
            秒 0-59 , - * /
            分 0-59 , - * /
            小时 0-23 , - * /
            日期 1-31 , - * ? / L W C
            月份 1-12 或者 JAN-DEC , - * /
            星期 1-7 或者 SUN-SAT , - * ? / L C #
            年（可选） 留空, 1970-2099 , - * /
        表达式意义
            "0 0 12 * * ?" 每天中午12点触发
            "0 15 10 ? * *" 每天上午10:15触发
            "0 15 10 * * ?" 每天上午10:15触发
            "0 15 10 * * ? *" 每天上午10:15触发
            "0 15 10 * * ? 2005" 2005年的每天上午10:15触发
            "0 * 14 * * ?" 在每天下午2点到下午2:59期间的每1分钟触发
            "0 0/5 14 * * ?" 在每天下午2点到下午2:55期间的每5分钟触发
            "0 0/5 14,18 * * ?" 在每天下午2点到2:55期间和下午6点到6:55期间的每5分钟触发
            "0 0-5 14 * * ?" 在每天下午2点到下午2:05期间的每1分钟触发
            "0 10,44 14 ? 3 WED" 每年三月的星期三的下午2:10和2:44触发
            "0 15 10 ? * MON-FRI" 周一至周五的上午10:15触发
            "0 15 10 15 * ?" 每月15日上午10:15触发
            "0 15 10 L * ?" 每月最后一日的上午10:15触发
            "0 15 10 ? * 6L" 每月的最后一个星期五上午10:15触发
            "0 15 10 ? * 6L 2002-2005" 2002年至2005年的每月的最后一个星期五上午10:15触发
            "0 15 10 ? * 6#3" 每月的第三个星期五上午10:15触发
            每天早上6点
            0 6 * * *
            每两个小时
            0 */2 * * *
            晚上11点到早上8点之间每两个小时，早上八点
            0 23-7/2，8 * * *
            每个月的4号和每个礼拜的礼拜一到礼拜三的早上11点
            0 11 4 * 1-3
            1月1日早上4点
            0 4 1 1 *
       -->

    <!-- 2.2：定义触发器的bean，定义一个Cron的Trigger，一个触发器只能和一个任务进行绑定 -->
<!--    <bean id="cronTrigger" class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">
        &lt;!&ndash; 指定Trigger的名称 &ndash;&gt;
        <property name="name" value="hw_trigger"/>
        &lt;!&ndash; 指定Trigger的名称 &ndash;&gt;
        <property name="group" value="hw_trigger_group"/>
        &lt;!&ndash; 指定Tirgger绑定的Job &ndash;&gt;
        <property name="jobDetail" ref="testJob"/>
        &lt;!&ndash; 指定Cron 的表达式 ，当前是每隔1s运行一次 &ndash;&gt;
        <property name="cronExpression" value="0 15 10 ? * *" />
    </bean>-->
    <bean id="diskTrigger" class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">
        <property name="jobDetail" ref="diskJob"/>
        <!-- 指定Cron 的表达式 ，当前是每隔1s运行一次 */5 * * * * ?     0 0 7,10,14 * * ?-->
        <property name="cronExpression" value="0 0 7,10,14 * * ?" />
    </bean>

    <bean id="personInfoTrigger" class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">
        <property name="jobDetail" ref="personInfoJob"/>
        <!-- 指定Cron 的表达式 ，当前是 每天中午11点触发该事件   -->
        <property name="cronExpression" value="0 0 17 * * ?" />
        <!--<property name="cronExpression" value="*/5 * * * * ?" />-->
    </bean>

    <!-- 3.定义调度器，并将Trigger注册到调度器中 -->
    <bean id="scheduler" class="org.springframework.scheduling.quartz.SchedulerFactoryBean">
        <property name="triggers">
            <list>
                <!-- <ref bean="simpleTrigger"/> -->
               <!-- <ref bean="cronTrigger"/>-->
                <ref bean="diskTrigger"/>
                <ref bean="personInfoTrigger"/>
            </list>
        </property>
        <!-- <property name="autoStartup" value="true" /> -->
    </bean>

</beans>